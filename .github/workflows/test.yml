name: "Tests"

on:
  pull_request:
  push:
    branches:
      - master
      - "releases/*"

jobs:
  test:
    name: Run JS Tests
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2

      - name: Read .node-version
        run: echo "##[set-output name=node-version;]$(cat .node-version)"
        id: node-version

      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: "${{ steps.node-version.outputs.node-version }}"

      - name: Cache NPM
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - run: npm install

      - run: pip3 install -r requirements.txt

      - run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true

  check-has-built:
    name: Check Has Been Built
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2

      - name: Read .node-version
        run: echo "##[set-output name=node-version;]$(cat .node-version)"
        id: node-version

      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: "${{ steps.node-version.outputs.node-version }}"

      - name: Cache NPM
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-node_v${{ steps.node-version.outputs.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-node_v${{ steps.node-version.outputs.node-version }}-

      - run: npm install

      - run: npm run pack

      - name: Check `npm run pack` was run before commit
        run: git diff --exit-code

  check-types:
    name: Check Types
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2

      - name: Read .node-version
        run: echo "##[set-output name=node-version;]$(cat .node-version)"
        id: node-version

      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: "${{ steps.node-version.outputs.node-version }}"

      - name: Cache NPM
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-node_v${{ steps.node-version.outputs.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-node_v${{ steps.node-version.outputs.node-version }}-

      - run: npm install

      - run: npm run checkTypes

  test-action:
    name: Test Action Run
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2

      - name: Run action against test data
        id: update-xcode-version
        uses: ./
        with:
          xcode-versions-file: ./src/__tests__/xcode-versions.yml
          xcode-search-path: ./src/__tests__/Xcodes
          xcode-version-badge-versions: "last-major, latest,beta"
          xcode-version-badge-path: ./.github/xcode-versions-badge.svg
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate run
        continue-on-error: true
        run: |
          if ! diff ./src/__tests__/workflows/input.yml ./src/__tests__/workflows/output-double-quotes.yml; then
            exit 1
          fi

      - name: Check and close PR
        run: node ./scripts/check-and-close-pr.mjs
        env:
          PULL_REQUEST_ID: ${{ steps.update-xcode-version.outputs.pull-request-id }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
